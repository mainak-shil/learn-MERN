throw new Error

or

next(new Error)

===>> while doing async processing need todo next() as throw will return 

mongodb 
==============
install mongodb

login mongodb atlas - cloud storage
mainak77cool
1. create a cluster -free
mainak Nc5xNGU4GG5N4Hy7

add ip whitelist in Network Access

2. connect db get the url
url need to dynamic with username password of db and replace test -> <new db_name>
//<username>:<password>@<clusterName>.../<dbname>
mongodb+srv://mainak:Nc5xNGU4GG5N4Hy7@cluster0.oixkfgt.mongodb.net/places?retryWrites=true&w=majority

and Mongoose
==============

install mongoose
- interactive api with mongodb and node
- storing and maintaining database
- useful helper fns

_id vs id
- _id is mongodb objectID which can be converted to string by mongoose to interact

convert mongo object to simple js object, _id to id while fetching any data
<item>.toObject({ getters: true })
-> works only with object
{ getters: true } -> converts _id to id


find() -> all the docs
--available to both mongodb and Mongoose
- mongodb: returns a curser to iterate
- Mongoose: returns a curser and array

Relation between entities [users vs places]
place = {
  ...
  creator: { type: mongoose.Types.ObjectId, require: true, ref: "User" },
}

1:many
user = {
  ...
 places: [{ type: mongoose.Types.ObjectId, require: true, ref: "Place" }],
}



email: { type: "string", require: true, unique: true},
unique -> query faster if req email

response filter 
User.find({}, "-password"); {...<except password>}
User.find({}, "email name"); {email,name}

transitions ; sessions
-> these operation need the table, else error
-> mongoose push -> establish conn between models

populate() - get access to a object's relation object

CORS - cross-origin resource sharing
- resources on a server can only be requested from save server
- browser error
- fix by attach header
- BE will know ok you can use it



ALWAYS USE:

In BE:::::
error handling: next(new HttpError("Could not find a place with that id", 404));
throw vs return next() -> throw doesn't execute next blocks in async tasks
*** bodyparser in FE works in POST only if we pass content type json in headers ***
working with transactions; need to have the collection in db

In FE:::::
useCallback -> doesn't recreate when fn re-renders
useHistory.push('/) / replace()

cancel ongoing network calls, where component is not present; in cleanup fn of hooks


TO read
- all methods  mainly CRUD for mongodb and mongoose
- mongoose-unique-validator